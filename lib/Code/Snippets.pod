=begin pod

=head1 NAME

Code::Snippets - Manage code snippets contained in a single file.

=head1 SYNOPSIS

Main program:

    use Code::Snippets;

        # To handle Raku snippets for example.
    (my $ok, $CS) = Code::Snippets.build(
        snips-file  => ⟨some file⟩,
        snips-dir   => ⟨some dir⟩,
        snip-bef_rx => / ^^ ｢# ｣ '-'+ "\n# ID:" /,
        snip-aft_rx => / ^^ "end-of-snippet" $$ /,
        snalex_rx   => / <after ^^ "# ID:" \s+> \S+ /,
    );
    $ok or say($CS), exit 1;

A corresponding snippets file:

    Here are some Raku snippets.

    ## ID: baz Bla bla

    say "This is snippet 'baz'.";

    end-of-snippet

    This text will be ignored.

    ## ID: SKIP

    This snippet will be ignored.
    ...

    ## ID: foo

    say 42;

=head1 DESCRIPTION

When learning new programming languages, frameworks, or techniques, I
often try out short code snippets and like to keep them around for
reference. But I find it rather inconvenient to have to rummage
through dozens of tiny snippets, each in its own file, to retrieve or
modify code examples or variants. This module helps me manage a bunch
of more or less independent snippets all in the same file and to on
demand extract them out to disk; some other code will need to take
care of actually running, compiling, whatever, the resulting extracted
snippets.

Each snippet is identified by its snippet alias expression (snalex),
made up of the non-whitespace characters immediately following the
snippet marker ($self.snim). This expression holds the snippet alias
and information to build the file name the snippet will be extracted
to.

The alias and the file name info are separated by a colon; if there is
no colon, the alias is used to build the file name.

In the example, each snippet will start at the line immediately
following a line matching / ^^ ｢# ｣ '-'+ "\n# ID:" / and will extend
up to and stop right before the next such match, or the first line
that matches / ^^ "end-of-snippet $$ /, or the end of the file.

A snippet alias of "SKIP" is special and the corresponding snippet
will simply  be ignored.

=head1 Snip alias expressions (snalex)

Example snalex`s, where ｢Σ｣ represents the snippet alias, ⟨snal⟩:

    snalex          Main?           What
                      $snips-dir/⟨file⟩
    ------          ------          ----
    SKIP                            Skip the snippet completely.

    ⟨snal⟩          : ⋯/Σ           Single file in top level.
        Example: --------------------------------------------
     sn0            : ⋯/sn0

    ⟨snal⟩:Σ.raku   : ⋯/Σ.raku      Single file in top level.
        Example: --------------------------------------------
     sn1:Σ.raku     : ⋯/sn1.raku

    ⟨snal⟩          : ⋯/Σ           Multiple files in top level.
    ⟨snal⟩::a         ⋯/a
        Example: --------------------------------------------
    sn2             : ⋯/sn2
    sn2::a            ⋯/a

    ⟨snal⟩/         : ⋯/Σ/Σ         Single file in subdir.
        Example: --------------------------------------------
    sn3/            : ⋯/sn3/sn3

    sn3/4           : ⋯/sn4/a       Single file in subdir.

    ⟨snal⟩/a/Σ      : ⋯/Σ/a/        Multiple files in subdir.
    ⟨snal⟩//          ⋯/Σ/Σ
    ⟨snal⟩//b         ⋯/Σ/b
    ⟨snal⟩//c         ⋯/Σ/c
    ⟨snal⟩//d/e       ⋯/Σ/d/e
        Example: --------------------------------------------
    sn5/a/Σ         : ⋯/sn5/a/      Multiple files in subdir.
    sn5//             ⋯/sn5/sn5
    sn5//b            ⋯/sn5/b
    sn5//c            ⋯/sn5/c
    sn5//d/e          ⋯/sn5/d/e

        Invalid: duplicates, or too many or no main indicated.
        (Each column is a separate case.)
    ⟨snal⟩:a    ⟨snal⟩:     ⟨snal⟩::a   ⟨snal⟩//a   ⟨snal⟩/
    ⟨snal⟩::b   ⟨snal⟩:a    ⟨snal⟩::    ⟨snal⟩//b   ⟨snal⟩/a
    ⟨snal⟩:a
        Example: --------------------------------------------
    snip01:a    snip02:     snip03::a   snip04//a   snip05/
    snip01::b   snip02:a    snip03::    snip04//b   snip05/a
    snip01:a

Example snippet aliases and their corresponding file names, with the
main file indicated by ｢:｣:

    eg1::Foo.rakumod     ⋯/Foo.rakumod
    eg1::Foo.t           ⋯/Foo.t
    eg1:Foo            : ⋯/Foo.raku

    eg2/Foo.t          : ⋯/eg2/Foo.t
    eg2//Foo.rakumod     ⋯/eg2/Foo.rakumod
    eg2//Foo             ⋯/eg2/Foo.raku

=head1 AUTHOR

Luc St-Louis <lucs@pobox.com>

=head1 COPYRIGHT AND LICENSE

Copyright 2015

This library is free software; you can redistribute it and/or modify
it under the Artistic License 2.0.

=end pod

