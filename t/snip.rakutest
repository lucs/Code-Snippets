use Test;
use Test::Selector;
use Code::Snippets;

# --------------------------------------------------------------------
sub make-code-snippets ($test-snips-name, $snips-data) {
    my $dSnips = $*TMPDIR.path ~ "/$test-snips-name";
    .d || .mkdir given $dSnips.IO;
    my $fSnips = "$dSnips/$test-snips-name";
    $fSnips.IO.spurt: $snips-data;
    my ($ok, $CS) = Code::Snippets.build(
        snips-file  => $fSnips,
        snips-dir   => $dSnips,
        snip-bef_rx => / ^^ "# SnipBeg " \N+ /,
        snip-aft_rx => / ^^ "# SnipEnd" /,
        snid_rx     => / <after ^^ "# SnipBeg" \s+> \S+ /,
    );
    return $ok, $CS;
}
    
my ($ok, $CS) = make-code-snippets('snips-test01', Q:to/EoS/)
    # SnipBeg s01!&
    'Hello'.say;
    # SnipEnd
    moo
    # SnipBeg s02!&
    'World'.say;
    # SnipEnd
    EoS
;

say $CS.snals.join: "\n";

# --------------------------------------------------------------------
done-testing;

