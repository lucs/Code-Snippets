use v6;
use Test;
use Test::Selector;
use Code::Snippets;

# Are these valid? Not sure (lucs, ☰2023-02-19.Sun):

#     ◑⟨snal⟩::a/b       ⋯/a/b

# --------------------------------------------------------------------
t b1 => {
    for (
        [' f!f      f     ', True],
        [' f!g      g     ', True],
       # [' f!/f     f/f   ', True],
       # [' f!/g     f/g   ', True],
       # [' f!/g/&   f/g/f ', True],
       # [' f!/g/h   f/g/h ', True],
       # [' f/g      f/g   ', False],
       # [' f/g/h    f/g/h ', False],
       # [' f/g/&    f/g/f ', False],
    ) -> $test-data {
        my %exp;
        %exp<snam> = 'f';
        my $snid-path;
        my $req-snid;
        ($snid-path, %exp<main>) = | @$test-data;
        ($req-snid, %exp<path>) = $snid-path.comb: / \S+ /;
        my $got-snid = Code::Snippets::Snid.from-str($req-snid);
        for <snam path main> -> $attr {
            is(
                %exp{$attr},
                $got-snid."$attr"(),
                sprintf('%6s %8s %s', $req-snid, $attr, %exp{$attr}), 
            );
        }
    }
};

# --------------------------------------------------------------------
t b2 => {
    for (|<
       f|/
       f/|
       f||
       f///
       f:/
       f/:
       f|:
       f:|
       f::/
       f:/:
    >) -> $snalex {
        next if $snalex.substr(0, 1) eq '#';
        my $snalob = Code::Snippets::Snalob.from-str($snalex);
        ok(! $snalob, "Invalid snalex '$snalex'.")
    }
}

# --------------------------------------------------------------------
t a2 => {
    for (|<
       .-.foo
       @foo
        ..foo
       --foo
    >) -> $snalex {
        next if $snalex.substr(0, 1) eq '#';
        my $snalob = Code::Snippets::Snalob.from-str($snalex);
        ok(! $snalob, "Invalid snalex '$snalex'.")
    }
}

done-testing;

