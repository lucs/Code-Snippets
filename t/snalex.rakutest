use v6;
use Test;
use Test::Selector;
use Code::Snippets;

# Are these valid? Not sure (lucs, ☰2023-02-19.Sun):

#     ◑⟨snal⟩::a/b       ⋯/a/b

# --------------------------------------------------------------------
t b1 => {
    for (
        [|< f      f      >, True],
        [|< f:g    g      >, True],
        [|< f::    f      >, False],
        [|< f::g   g      >, False],
        [|< f/     Σ/Σ    >, True],
        [|< f/g    Σ/g    >, True],
        [|< f/g/   Σ/g/Σ  >, True],
        [|< f//g/  Σ/g/Σ  >, False],
        [|< f//    Σ/Σ    >, False],
        [|< f//g   Σ/g    >, False],
        [|< f/g/h  Σ/g/h  >, True],
        [|< f//g/h Σ/g/h  >, False],

       # [|< f:Σ    f      >, True],
       # [|< f::    f      >, False],
       # [|< f::g   g      >, False],
       # [|< f/     Σ/Σ    >, True],
       # [|< f/g    Σ/g    >, True],
       # [|< f/g/   Σ/g/Σ  >, True],
       # [|< f//g/  Σ/g/Σ  >, False],
       # [|< f//    Σ/Σ    >, False],
       # [|< f//g   Σ/g    >, False],
       # [|< f/g/h  Σ/g/h  >, True],
       # [|< f//g/h Σ/g/h  >, False],
    ) -> $test-data {
            # Expected values.
        my %exp = <snalex path main> Z=> @$test-data;
        %exp<snal> = 'f';
        %exp<path> ~~ s:g/ Σ /{%exp<snal>}/;
        my $snalex = %exp<snalex>;
        my $snalob = Code::Snippets::Snalob.from-str($snalex);
        for %exp.kv -> $k, $v {
            is($snalob."$k"(), $v, sprintf('%6s %8s %s', $snalex, $k, $v));
        }
    }
};

# --------------------------------------------------------------------
t b2 => {
    for (|<
       f|/
       f/|
       f||
       f///
       f:/
       f/:
       f|:
       f:|
       f::/
       f:/:
    >) -> $snalex {
        next if $snalex.substr(0, 1) eq '#';
        my $snalob = Code::Snippets::Snalob.from-str($snalex);
        ok(! $snalob, "Invalid snalex '$snalex'.")
    }
}

# --------------------------------------------------------------------
t a2 => {
    for (|<
       .-.foo
       @foo
        ..foo
       --foo
    >) -> $snalex {
        next if $snalex.substr(0, 1) eq '#';
        my $snalob = Code::Snippets::Snalob.from-str($snalex);
        ok(! $snalob, "Invalid snalex '$snalex'.")
    }
}

done-testing;

